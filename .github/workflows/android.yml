name: Android CI

env:
  version: v1.0.${{ github.run_number }}

on:
  push:
    branches:
      - main
    # tags:
    #   - v*
  pull_request:
    branches:
      - main

jobs:
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: unit test
        run: |
          chmod +x gradlew
          ./gradlew testDebugUnitTest

  # instrumented_test:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: ⚙️ set up jdk
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'
  #         distribution: 'adopt'
  #         cache: gradle
  #     # - name: grant execute permission for gradlew
  #     #   run: chmod +x gradlew
  #     - name: instrumented test
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: 29
  #         script: |
  #           chmod +x gradlew
  #           ./gradlew connectedAndroidTest

  build_debug:
    runs-on: ubuntu-latest
    steps:
      - name: 🗸 checkout
        uses: actions/checkout@v2

      - name: ⚙️ set up jdk
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      # https://github.com/marketplace/actions/increment-the-version-code-of-your-project
      - name: 🆙 set version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{ github.run_number }}
          versionName: ${{ env.version }}

      - name: 🛠️ build
        run: |
          chmod +x ./gradlew
          ./gradlew assembleDebug

      # https://github.com/marketplace/actions/sign-android-release
      - name: 🖋️ sign
        uses: r0adkll/sign-android-release@v1
        id: sign
        with:
          releaseDirectory: ./app/build/outputs/apk/debug/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_DEBUG }}
          alias: ${{ secrets.ALIAS_DEBUG }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD_DEBUG }}
          keyPassword: ${{ secrets.KEY_PASSWORD_DEBUG }}
        # env:
          # BUILD_TOOLS_VERSION: "32.0.0"

      # https://github.com/actions/upload-artifact
      - name: ⬆️ upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: debug
          path: ${{steps.sign.outputs.signedReleaseFile}}
          retention-days: 1

  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: 🗸 checkout
        uses: actions/checkout@v2

      - name: ⚙️ set up jdk
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: 🆙 set version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{ github.run_number }}
          versionName: ${{ env.version }}

      - name: 🛠️ build
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - name: 🔄 copy
        run: |
          for file_name in ./app/build/outputs/apk/release/*.apk; do
            name="${file_name%.*}"
            extension="${file_name##*.}"
            cp -- "$file_name" "$name-unsigned.$extension"
          done

      - name: ⬆️ upload unsigned artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ./*.apk
          retention-days: 1

      - name: 🖋️ sign
        uses: r0adkll/sign-android-release@v1
        id: sign
        with:
          releaseDirectory: ./app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_RELEASE }}
          alias: ${{ secrets.ALIAS_RELEASE }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD_RELEASE }}
          keyPassword: ${{ secrets.KEY_PASSWORD_RELEASE }}

      - name: ⬆️ upload signed artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ${{steps.sign.outputs.signedReleaseFile}}
          retention-days: 1

  create_release:
    # needs: [unit_test, instrumented_test, build_debug, build_release]
    needs: [unit_test, build_debug, build_release]
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/download-artifact
      - name: ⬇️ download artifact
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: 🔄 rename debug build
        run: |
          for file_name in ./debug/*.apk; do
            mv "$file_name" "$(echo "$file_name" | sed -e 's/-signed//g')"
          done

      - name: 🏷️ create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.version }}",
              sha: context.sha
            })          

      # https://github.com/marketplace/actions/create-release
      - name: 🛎️ release action
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # tag: ${{ steps.create_tag.outputs.tag }}
          tag: ${{ env.version }}
          artifacts: >
            ./debug/*.apk,
            ./release/*.apk

#---------------------------------------------------------------------------------------------------

# # https://github.com/anothrNick/github-tag-action
# - name: 🏷️ tag action
#   id: create_tag
#   uses: anothrNick/github-tag-action@1.36.0
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     DEFAULT_BUMP: patch
#     WITH_V: true

# - name: foo
#   run: echo "${{ env.VERSION }}"

# - run: ls -laR ./

# - name: rename
#   run: mv ./app/build/outputs/apk/release/app-release{-unsigned,}.apk

# - name: ls
#   run: |
#     ls -la .

# /home/runner/work/MainDetail/MainDetail
# - name: pwd
#   run: pwd

# tag:
#   needs: [unit_test, build]
#   runs-on: ubuntu-latest

# https://github.com/softprops/action-gh-release
# - name: 🛎️ create release
#   uses: softprops/action-gh-release@v1
#   if: startsWith(github.ref, 'refs/tags/')
#   with:
#     files: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# https://github.com/actions/upload-artifact
# - name: upload artifact
#   uses: actions/upload-artifact@v2
#   with:
#     path: |
#       ./app/build/outputs/apk/debug/app-debug-signed.apk
#       ./app/build/outputs/apk/release/app-release-unsigned.apk

# - name: ls
#   run: ls -la ./app/build/outputs/apk/debug/

# - name: create release
#   id: create_release
#   uses: actions/create-release@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     tag_name: ${{ github.ref }}
#     release_name: ${{ github.ref }}

# - name: save name of artifact
#   id: set-result-artifact
#   run: |
#     ARTIFACT_PATHNAME_APK=$(ls ./app/build/outputs/apk/debug/app-debug.apk | head -n 1)
#     ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
#     echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
#     echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
#     echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV

# - name: upload release asset
#   id: upload-release-asset
#   uses: actions/upload-release-asset@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     upload_url: ${{ steps.create_release.outputs.upload_url }}
#     asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
#     asset_name: ${{ env.ARTIFACT_NAME_APK }}
#     asset_content_type: application/zip
